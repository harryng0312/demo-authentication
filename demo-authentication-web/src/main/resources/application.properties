logging.config=classpath:logback.xml

# the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
#camel.springboot.name=camel

# lets listen on all ports to ensure we can be invoked from the pod IP
server.address=0.0.0.0
server.port=8080
#server.context-path=/web
server.servlet.context-path=/web

# lets use a different management port in case you need to listen to HTTP requests on 8080
#management.port=8081
management.address=0.0.0.0
management.port=8081

# disable all management enpoints except health
endpoints.enabled=true
endpoints.health.enabled=true

spring.main.web-application-type=none
camel.springboot.main-run-controller=true

management.endpoints.web.exposure.include=*
management.endpoint.shutdown.enabled=true
endpoints.shutdown.enabled=true
#spring.datasource.url=jdbc:postgresql://localhost:5432/test_db
#spring.datasource.driver-class-name=org.postgresql.Driver

#for >2: server.servlet.context-path=/ws
#server.context-path=/ws
camel.component.servlet.mapping.contextPath=/ws/*

# turn off
#camel.springboot.xmlRoutes = true
# scan in the com/foo/routes classpath
#camel.springboot.xmlRoutes = classpath:spring/route/*.xml
# turn off
# camel.springboot.xmlRests = false
# scan in the com/foo/routes classpath
#camel.springboot.xmlRests = classpath:spring/rest/*.xml
